{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInput = useRef();\n  const streetInput = useRef();\n  const postalCodeInput = useRef();\n  const cityInput = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInput.current.value;\n    const enteredStreet = streetInput.current.value;\n    const enteredPostalCode = postalCodeInput.current.value;\n    const enteredCity = cityInput.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n  };\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onHideCart,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"+RVFsfLX4N9PPzb+23S+XCj6V5I=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInput","streetInput","postalCodeInput","cityInput","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onHideCart","submit","_c","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\n\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputsValidity, setFormInputsValidity] = useState({\r\n        name: true,\r\n        street: true, \r\n        city: true,\r\n        postalCode: true\r\n    })\r\n\r\n  const nameInput = useRef();\r\n  const streetInput = useRef();\r\n  const postalCodeInput = useRef();\r\n  const cityInput = useRef();\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInput.current.value;\r\n    const enteredStreet = streetInput.current.value;\r\n    const enteredPostalCode = postalCodeInput.current.value;\r\n    const enteredCity = cityInput.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n        name: enteredNameIsValid,\r\n        street: enteredStreetIsValid,\r\n        city: enteredCityIsValid,\r\n        postalCode:enteredPostalCodeIsValid\r\n    })\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n\r\n\r\n      if(!formIsValid) {\r\n        return\r\n      }\r\n\r\n      props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredStreet,\r\n        city: enteredCity,\r\n        postalCode: enteredPostalCode\r\n      })\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`\r\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`\r\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`\r\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInput} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p> }\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInput} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p> }\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInput} />\r\n        {!formInputsValidity.postalCode && <p>Please enter a valid postal code (5 characters long)!</p> }\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInput} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p> }\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onHideCart}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}