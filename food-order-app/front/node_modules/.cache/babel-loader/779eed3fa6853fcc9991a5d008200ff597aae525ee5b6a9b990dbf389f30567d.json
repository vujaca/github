{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\front\\\\src\\\\pages\\\\MealDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport MealItem from \"../components/Meals/MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MealDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData(\"meal-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading meal...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 19\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: data.meal,\n        children: loadedMeal => /*#__PURE__*/_jsxDEV(MealItem, {\n          meal: loadedMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MealDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = MealDetailPage;\nexport default MealDetailPage;\nasync function loadMeal(id) {\n  const response = await fetch(\"http://localhost:8080/meals/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected meal!\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.meal;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    meal: await loadMeal(id)\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"MealDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","MealItem","jsxDEV","_jsxDEV","Fragment","_Fragment","MealDetailPage","_s","data","children","Suspense","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Await","resolve","meal","loadedMeal","_c","loadMeal","id","response","fetch","ok","message","status","resData","loader","_ref","request","params","eventId","defer","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/pages/MealDetail.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport MealItem from \"../components/Meals/MealItem/MealItem\";\r\n\r\nconst MealDetailPage = () => {\r\n  const data = useRouteLoaderData(\"meal-detail\");\r\n\r\n  return (\r\n    <>\r\n      <Suspense\r\n        fallback={<p style={{ textAlign: \"center\" }}>Loading meal...</p>}\r\n      >\r\n        <Await resolve={data.meal}>\r\n          {(loadedMeal) => <MealItem meal={loadedMeal} />}\r\n        </Await>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealDetailPage;\r\n\r\nasync function loadMeal(id) {\r\n  const response = await fetch(\"http://localhost:8080/meals/\" + id);\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected meal!\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.meal;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  return defer({\r\n    meal: await loadMeal(id),\r\n  });\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,QAAQ,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,aAAa,CAAC;EAE9C,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACO,QAAQ;MACPC,QAAQ,eAAER,OAAA;QAAGS,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAJ,QAAA,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;MAAAR,QAAA,eAEjEN,OAAA,CAACe,KAAK;QAACC,OAAO,EAAEX,IAAI,CAACY,IAAK;QAAAX,QAAA,EACtBY,UAAU,iBAAKlB,OAAA,CAACF,QAAQ;UAACmB,IAAI,EAAEC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACzC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC,iBACV;AAEP,CAAC;AAACV,EAAA,CAdID,cAAc;EAAA,QACLN,kBAAkB;AAAA;AAAAsB,EAAA,GAD3BhB,cAAc;AAgBpB,eAAeA,cAAc;AAE7B,eAAeiB,QAAQA,CAACC,EAAE,EAAE;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGF,EAAE,CAAC;EACjE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM5B,IAAI,CACR;MAAE6B,OAAO,EAAE;IAA6C,CAAC,EACzD;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAAC1B,IAAI,EAAE;IACrC,OAAO+B,OAAO,CAACV,IAAI;EACrB;AACF;AAEA,OAAO,eAAeW,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMR,EAAE,GAAGU,MAAM,CAACC,OAAO;EAEzB,OAAOC,KAAK,CAAC;IACXhB,IAAI,EAAE,MAAMG,QAAQ,CAACC,EAAE;EACzB,CAAC,CAAC;AACJ;AAAC,IAAAF,EAAA;AAAAe,YAAA,CAAAf,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}