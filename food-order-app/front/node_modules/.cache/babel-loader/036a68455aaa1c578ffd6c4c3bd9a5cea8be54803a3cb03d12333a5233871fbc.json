{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\front\\\\src\\\\pages\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../components/UI/Card\";\nimport MealItem from \"../components/Meals/MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('http://localhost:8080/api/meals');\n      if (!response.ok) {\n        throw new Error('Somethung went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\n\n// import { useLoaderData, json, defer, Await } from \"react-router-dom\";\n// import MealItem from './MealItem/MealItem';\n// import { Suspense } from \"react\";\n// import Card from '../UI/Card';\n// import classes from './AvailableMeals.module.css';\n\n// function AvailableMeals() {\n//   const data = useLoaderData();\n//   const meals = data.meals\n//   const mealsLoading = <section className={classes.MealsLoading}>\n//   <p>Loading...</p>\n// </section>\n\n//   return (\n//     <section className={classes.meals}>\n//       <Card>\n//        <Suspense fallback={mealsLoading}>\n//       <Await resolve={meals}>\n//     {(loadedMeals) => loadedMeals.map((meal) => (\n//     <MealItem\n//       id={meal.id}\n//       key={meal.id}\n//       name={meal.name}\n//       description={meal.description}\n//       price={meal.price}\n//     />\n//   ))}\n//   </Await>\n//     </Suspense>\n//     </Card>\n//     </section>\n//   )\n\n// }\n\n// export default AvailableMeals;\n\n// const loadMeals = async() => {\n//   //you can't use hooks in loader function\n//   const response = await fetch(\"http://localhost:8080/api/meals\");\n\n//   if (!response.ok) {\n//     //  return {isError: true, message: 'Could not fetch events.'}\n//     // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n//     //   status: 500,\n//     // });\n//     throw json(\n//       { message: \"Could not fetch meals.\" },\n//       {\n//         status: 500,\n//       }\n//     );\n//   } else {\n//     const resData = await response.json()\n//     return resData\n//   }\n// }\n\n// export const loader = () => {\n//   return defer( {\n//     meals: loadMeals()\n//   })\n// };\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","classes","Card","MealItem","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","className","MealsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","MealsError","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/pages/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../components/UI/Card\";\r\nimport MealItem from \"../components/Meals/MealItem/MealItem\";\r\n\r\n\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [httpError, setHttpError] = useState()\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch('http://localhost:8080/api/meals')\r\n      \r\n      if(!response.ok) {\r\n        throw new Error('Somethung went wrong!')\r\n      }\r\n\r\n      const responseData = await response.json()\r\n\r\n      const loadedMeals = []\r\n      \r\n      for(const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price\r\n        })\r\n      }\r\n\r\n      setMeals(loadedMeals)\r\n      setIsLoading(false)\r\n    }\r\n\r\n     fetchMeals().catch(error => {\r\n      setIsLoading(false)\r\n      setHttpError(error.message)\r\n     }) \r\n   \r\n  }, [])\r\n\r\n  if(isLoading) {\r\n    return <section className={classes.MealsLoading}>\r\n      <p>Loading...</p>\r\n    </section>\r\n  }\r\n\r\n  if(httpError) {\r\n    return <section className={classes.MealsError}>\r\n      <p>{httpError}</p>\r\n    </section>\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\nexport default AvailableMeals;\r\n\r\n// import { useLoaderData, json, defer, Await } from \"react-router-dom\";\r\n// import MealItem from './MealItem/MealItem';\r\n// import { Suspense } from \"react\";\r\n// import Card from '../UI/Card';\r\n// import classes from './AvailableMeals.module.css';\r\n\r\n// function AvailableMeals() {\r\n//   const data = useLoaderData();\r\n//   const meals = data.meals\r\n//   const mealsLoading = <section className={classes.MealsLoading}>\r\n//   <p>Loading...</p>\r\n// </section>\r\n\r\n//   return (\r\n//     <section className={classes.meals}>\r\n//       <Card>\r\n//        <Suspense fallback={mealsLoading}>\r\n//       <Await resolve={meals}>\r\n//     {(loadedMeals) => loadedMeals.map((meal) => (\r\n//     <MealItem\r\n//       id={meal.id}\r\n//       key={meal.id}\r\n//       name={meal.name}\r\n//       description={meal.description}\r\n//       price={meal.price}\r\n//     />\r\n//   ))}\r\n//   </Await>\r\n//     </Suspense>\r\n//     </Card>\r\n//     </section>\r\n//   )\r\n\r\n// }\r\n\r\n// export default AvailableMeals;\r\n\r\n// const loadMeals = async() => {\r\n//   //you can't use hooks in loader function\r\n//   const response = await fetch(\"http://localhost:8080/api/meals\");\r\n\r\n//   if (!response.ok) {\r\n//     //  return {isError: true, message: 'Could not fetch events.'}\r\n//     // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n//     //   status: 500,\r\n//     // });\r\n//     throw json(\r\n//       { message: \"Could not fetch meals.\" },\r\n//       {\r\n//         status: 500,\r\n//       }\r\n//     );\r\n//   } else {\r\n//     const resData = await response.json()\r\n//     return resData\r\n//   }\r\n// }\r\n\r\n// export const loader = () => {\r\n//   return defer( {\r\n//     meals: loadMeals()\r\n//   })\r\n// };\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,QAAQ,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI7D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,EAAE;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAE/D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAE1C,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAI,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC7BE,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;UAC1CC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QAC3B,CAAC,CAAC;MACJ;MAEAlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEAG,UAAU,EAAE,CAACc,KAAK,CAACC,KAAK,IAAI;MAC3BlB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACgB,KAAK,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGpB,SAAS,EAAE;IACZ,oBAAOL,OAAA;MAAS0B,SAAS,EAAE9B,OAAO,CAAC+B,YAAa;MAAAC,QAAA,eAC9C5B,OAAA;QAAA4B,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EACZ;EAEA,IAAGzB,SAAS,EAAE;IACZ,oBAAOP,OAAA;MAAS0B,SAAS,EAAE9B,OAAO,CAACqC,UAAW;MAAAL,QAAA,eAC5C5B,OAAA;QAAA4B,QAAA,EAAIrB;MAAS;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV;EACZ;EAEA,MAAME,SAAS,GAAG/B,KAAK,CAACgC,GAAG,CAAEC,IAAI,iBAC/BpC,OAAA,CAACF,QAAQ;IACPqB,EAAE,EAAEiB,IAAI,CAACjB,EAAG;IAEZC,IAAI,EAAEgB,IAAI,CAAChB,IAAK;IAChBC,WAAW,EAAEe,IAAI,CAACf,WAAY;IAC9BC,KAAK,EAAEc,IAAI,CAACd;EAAM,GAHbc,IAAI,CAACjB,EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKf,CAAC;EAEF,oBACEhC,OAAA;IAAS0B,SAAS,EAAE9B,OAAO,CAACO,KAAM;IAAAyB,QAAA,eAChC5B,OAAA,CAACH,IAAI;MAAA+B,QAAA,eACH5B,OAAA;QAAA4B,QAAA,EAAKM;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAAC9B,EAAA,CAlEID,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAmEpB,eAAeA,cAAc;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}