{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\front\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// import classes from \"./AvailableMeals.module.css\";\n// import Card from \"../UI/Card\";\n// import MealItem from \"./MealItem/MealItem\";\n\n// const AvailableMeals = () => {\n//   const [meals, setMeals] = useState([])\n//   const [isLoading, setIsLoading] = useState(true)\n//   const [httpError, setHttpError] = useState()\n\n//   useEffect(() => {\n//     const fetchMeals = async () => {\n//       const response = await fetch('http://localhost:8080/api/meals')\n\n//       if(!response.ok) {\n//         throw new Error('Somethung went wrong!')\n//       }\n\n//       const responseData = await response.json()\n\n//       const loadedMeals = []\n\n//       for(const key in responseData) {\n//         loadedMeals.push({\n//           id: key,\n//           name: responseData[key].name,\n//           description: responseData[key].description,\n//           price: responseData[key].price\n//         })\n//       }\n\n//       setMeals(loadedMeals)\n//       setIsLoading(false)\n//     }\n\n//      fetchMeals().catch(error => {\n//       setIsLoading(false)\n//       setHttpError(error.message)\n//      }) \n\n//   }, [])\n\n//   if(isLoading) {\n//     return <section className={classes.MealsLoading}>\n//       <p>Loading...</p>\n//     </section>\n//   }\n\n//   if(httpError) {\n//     return <section className={classes.MealsError}>\n//       <p>{httpError}</p>\n//     </section>\n//   }\n\n//   const mealsList = meals.map((meal) => (\n//     <MealItem\n//       id={meal.id}\n//       key={meal.id}\n//       name={meal.name}\n//       description={meal.description}\n//       price={meal.price}\n//     />\n//   ));\n\n//   return (\n//     <section className={classes.meals}>\n//       <Card>\n//         <ul>{mealsList}</ul>\n//       </Card>\n//     </section>\n//   );\n// };\n// export default AvailableMeals;\n\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport MealItem from './MealItem/MealItem';\nimport { Suspense } from \"react\";\nimport Card from '../UI/Card';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AvailableMeals() {\n  _s();\n  const data = useLoaderData();\n  const meals = data.meals;\n  const mealsLoading = /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.MealsLoading,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: meals,\n        children: loadedMeals => loadedMeals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n          id: meal.id,\n          name: meal.name,\n          description: meal.description,\n          price: meal.price\n        }, meal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(AvailableMeals, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = AvailableMeals;\nexport default AvailableMeals;\nconst loadMeals = async () => {\n  //you can't use hooks in loader function\n  const response = await fetch(\"http://localhost:8080/api/meals\");\n  if (!response.ok) {\n    //  return {isError: true, message: 'Could not fetch events.'}\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch meals.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n};\nexport const loader = () => {\n  return defer({\n    meals: loadMeals()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","MealItem","Suspense","Card","classes","jsxDEV","_jsxDEV","AvailableMeals","_s","data","meals","mealsLoading","className","MealsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","fallback","resolve","loadedMeals","map","meal","id","name","description","price","_c","loadMeals","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/components/Meals/AvailableMeals.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// import classes from \"./AvailableMeals.module.css\";\r\n// import Card from \"../UI/Card\";\r\n// import MealItem from \"./MealItem/MealItem\";\r\n\r\n\r\n\r\n// const AvailableMeals = () => {\r\n//   const [meals, setMeals] = useState([])\r\n//   const [isLoading, setIsLoading] = useState(true)\r\n//   const [httpError, setHttpError] = useState()\r\n\r\n//   useEffect(() => {\r\n//     const fetchMeals = async () => {\r\n//       const response = await fetch('http://localhost:8080/api/meals')\r\n      \r\n//       if(!response.ok) {\r\n//         throw new Error('Somethung went wrong!')\r\n//       }\r\n\r\n//       const responseData = await response.json()\r\n\r\n//       const loadedMeals = []\r\n      \r\n//       for(const key in responseData) {\r\n//         loadedMeals.push({\r\n//           id: key,\r\n//           name: responseData[key].name,\r\n//           description: responseData[key].description,\r\n//           price: responseData[key].price\r\n//         })\r\n//       }\r\n\r\n//       setMeals(loadedMeals)\r\n//       setIsLoading(false)\r\n//     }\r\n\r\n//      fetchMeals().catch(error => {\r\n//       setIsLoading(false)\r\n//       setHttpError(error.message)\r\n//      }) \r\n   \r\n//   }, [])\r\n\r\n//   if(isLoading) {\r\n//     return <section className={classes.MealsLoading}>\r\n//       <p>Loading...</p>\r\n//     </section>\r\n//   }\r\n\r\n//   if(httpError) {\r\n//     return <section className={classes.MealsError}>\r\n//       <p>{httpError}</p>\r\n//     </section>\r\n//   }\r\n\r\n//   const mealsList = meals.map((meal) => (\r\n//     <MealItem\r\n//       id={meal.id}\r\n//       key={meal.id}\r\n//       name={meal.name}\r\n//       description={meal.description}\r\n//       price={meal.price}\r\n//     />\r\n//   ));\r\n\r\n//   return (\r\n//     <section className={classes.meals}>\r\n//       <Card>\r\n//         <ul>{mealsList}</ul>\r\n//       </Card>\r\n//     </section>\r\n//   );\r\n// };\r\n// export default AvailableMeals;\r\n\r\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\r\nimport MealItem from './MealItem/MealItem';\r\nimport { Suspense } from \"react\";\r\nimport Card from '../UI/Card';\r\nimport classes from './AvailableMeals.module.css';\r\n\r\nfunction AvailableMeals() {\r\n  const data = useLoaderData();\r\n  const meals = data.meals\r\n  const mealsLoading = <section className={classes.MealsLoading}>\r\n  <p>Loading...</p>\r\n</section>\r\n\r\n  return (\r\n    <Card>\r\n       <Suspense fallback={mealsLoading}>\r\n      <Await resolve={meals}>\r\n    {(loadedMeals) => loadedMeals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ))}\r\n  </Await>\r\n    </Suspense>\r\n    </Card>\r\n  )\r\n\r\n}\r\n\r\nexport default AvailableMeals;\r\n\r\nconst loadMeals = async() => {\r\n  //you can't use hooks in loader function\r\n  const response = await fetch(\"http://localhost:8080/api/meals\");\r\n\r\n  if (!response.ok) {\r\n    //  return {isError: true, message: 'Could not fetch events.'}\r\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events.\" }), {\r\n    //   status: 500,\r\n    // });\r\n    throw json(\r\n      { message: \"Could not fetch meals.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    const resData = await response.json()\r\n    return resData\r\n  }\r\n}\r\n\r\nexport const loader = () => {\r\n  return defer( {\r\n    meals: loadMeals()\r\n  })\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}