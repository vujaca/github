{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\front\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n  router: router\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      router\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n      router\n    };\n  }\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHamdler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const clearCartHandler = () => {\n    dispatchCartAction({\n      type: 'CLEAR'\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    router: cartState.router,\n    addItem: addItemCartHandler,\n    removeItem: removeItemFromCartHamdler,\n    clearCart: clearCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","router","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","_s","cartState","dispatchCartAction","addItemCartHandler","removeItemFromCartHamdler","clearCartHandler","cartContext","addItem","removeItem","clearCart","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n  router: router\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex]\r\n    let updatedItems;\r\n\r\n    if(existingCartItem) {\r\n        const updatedItem = {\r\n            ...existingCartItem,\r\n            amount: existingCartItem.amount + action.item.amount\r\n        }\r\n        updatedItems = [...state.items]\r\n        updatedItems[existingCartItemIndex] = updatedItem\r\n    }else {\r\n        updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    \r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n      router\r\n    };}\r\n\r\n    if(action.type === 'REMOVE') {\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.id)\r\n        const existingItem = state.items[existingCartItemIndex]\r\n        const updatedTotalAmount = state.totalAmount - existingItem.price\r\n        let updatedItems;\r\n        if(existingItem.amount === 1) {\r\n            updatedItems= state.items.filter(item => item.id !== action.id)\r\n        }\r\n        else{\r\n            const updatedItem = {...existingItem, amount: existingItem.amount-1}\r\n            updatedItems = [...state.items] \r\n            updatedItems[existingCartItemIndex ] = updatedItem\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount,\r\n            router\r\n        }\r\n    }\r\n\r\n    if(action.type === 'CLEAR') {\r\n      return defaultCartState\r\n    }\r\n  \r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHamdler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({type: 'CLEAR'})\r\n  }\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    router: cartState.router,\r\n    addItem: addItemCartHandler,\r\n    removeItem: removeItemFromCartHamdler,\r\n    clearCart: clearCartHandler\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\nexport default CartProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}