{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() !== \"\";\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInput = useRef();\n  const streetInput = useRef();\n  const postalCodeInput = useRef();\n  const cityInput = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInput.current.value;\n    const enteredStreet = streetInput.current.value;\n    const enteredPostalCode = postalCodeInput.current.value;\n    const enteredCity = cityInput.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onHideCart,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"+RVFsfLX4N9PPzb+23S+XCj6V5I=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","jsxDEV","_jsxDEV","isEmpty","value","trim","isFiveChars","length","Checkout","props","_s","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInput","streetInput","postalCodeInput","cityInput","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","className","form","onSubmit","children","control","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onHideCart","submit","_c","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\n\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() !== \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputsValidity, setFormInputsValidity] = useState({\r\n        name: true,\r\n        street: true, \r\n        city: true,\r\n        postalCode: true\r\n    })\r\n\r\n  const nameInput = useRef();\r\n  const streetInput = useRef();\r\n  const postalCodeInput = useRef();\r\n  const cityInput = useRef();\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInput.current.value;\r\n    const enteredStreet = streetInput.current.value;\r\n    const enteredPostalCode = postalCodeInput.current.value;\r\n    const enteredCity = cityInput.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n        name: enteredNameIsValid,\r\n        street: enteredStreetIsValid,\r\n        city: enteredCityIsValid,\r\n        postalCode:enteredPostalCodeIsValid\r\n    })\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n\r\n\r\n      if(!formIsValid) {\r\n        return\r\n      }\r\n  };\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInput} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name</p> }\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInput} />\r\n        {!formInputsValidity.name && <p>Please enter a valid street</p> }\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInput} />\r\n        {!formInputsValidity.name && <p>Please enter a valid postal code</p> }\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInput} />\r\n        {!formInputsValidity.name && <p>Please enter a valid city</p> }\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onHideCart}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}