{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\front\\\\src\\\\pages\\\\Authentication.js\";\nimport Login from \"../components/authorization/Login\";\nimport Axios from '../apis/Axios';\nimport jwt_decode from 'jwt-decode';\nimport { redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenticationPage = () => {\n  return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action(_ref) {\n  let {\n    request\n  } = _ref;\n  // const searchParams = new URL(request.url).searchParams\n  // const mode = searchParams.get('mode') || 'login'\n\n  // if(mode !== 'login' && mode !== 'signup') {\n  //     throw json({message: 'Unsupported mode.'}, {status: 422})\n  // }\n\n  const data = await request.formData();\n  const cred = {\n    username: data.get('username'),\n    password: data.get('password')\n  };\n  try {\n    const response = await Axios.post('/korisnici/auth', cred);\n    const jwt_decoded = jwt_decode(response.data);\n    localStorage.setItem('jwt', response.data);\n    localStorage.setItem('role', jwt_decoded.role.authority);\n    const expiration = new Date();\n    expiration.setHours(expiration.getHours() + 1);\n    localStorage.setItem('expiration', expiration.toISOString());\n    return redirect('/');\n  } catch (error) {\n    if (error.response.status === 422 || error.response.status === 401) {\n      return error.response.data;\n    }\n    if (error.response.status === 405) {\n      let response = error.response.data;\n      response.message = 'Internal Server Error!';\n      return response;\n    }\n    if (error.response.status !== 200) {\n      let response = error.response.data;\n      response.message = 'Something went wrong!';\n      return response;\n    }\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["Login","Axios","jwt_decode","redirect","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","data","formData","cred","username","get","password","response","post","jwt_decoded","localStorage","setItem","role","authority","expiration","Date","setHours","getHours","toISOString","error","status","message","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/pages/Authentication.js"],"sourcesContent":["import Login from \"../components/authorization/Login\"\r\nimport Axios from '../apis/Axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { redirect } from 'react-router-dom';\r\n\r\nconst AuthenticationPage = () => {\r\n    return <Login/>\r\n\r\n}\r\nexport default AuthenticationPage;\r\n\r\nexport async function action({request}) {\r\n    // const searchParams = new URL(request.url).searchParams\r\n    // const mode = searchParams.get('mode') || 'login'\r\n\r\n    // if(mode !== 'login' && mode !== 'signup') {\r\n    //     throw json({message: 'Unsupported mode.'}, {status: 422})\r\n    // }\r\n\r\n    const data = await request.formData()\r\n    \r\n    const cred = {\r\n        username: data.get('username'),\r\n        password: data.get('password')\r\n    }\r\n\r\n        try {\r\n            const response = await Axios.post('/korisnici/auth', cred)\r\n            const jwt_decoded = jwt_decode(response.data)\r\n            localStorage.setItem('jwt', response.data)\r\n            localStorage.setItem('role', jwt_decoded.role.authority)\r\n            const expiration = new Date()\r\n            expiration.setHours(expiration.getHours()+1)\r\n            localStorage.setItem('expiration', expiration.toISOString())\r\n            return redirect('/')   \r\n        } catch (error) {\r\n            if (error.response.status === 422|| error.response.status === 401) {\r\n                return error.response.data\r\n              }\r\n            if(error.response.status === 405) {\r\n                let response = error.response.data\r\n                response.message='Internal Server Error!'\r\n                return response\r\n            }\r\n              if (error.response.status !== 200) {\r\n                let response = error.response.data\r\n                response.message='Something went wrong!'\r\n                return response\r\n              }\r\n        }\r\n    \r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,mCAAmC;AACrD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC7B,oBAAOD,OAAA,CAACL,KAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAEnB,CAAC;AAAAC,EAAA,GAHKL,kBAAkB;AAIxB,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAY;EAAA,IAAX;IAACC;EAAO,CAAC,GAAAD,IAAA;EAClC;EACA;;EAEA;EACA;EACA;;EAEA,MAAME,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,EAAE;EAErC,MAAMC,IAAI,GAAG;IACTC,QAAQ,EAAEH,IAAI,CAACI,GAAG,CAAC,UAAU,CAAC;IAC9BC,QAAQ,EAAEL,IAAI,CAACI,GAAG,CAAC,UAAU;EACjC,CAAC;EAEG,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,iBAAiB,EAAEL,IAAI,CAAC;IAC1D,MAAMM,WAAW,GAAGrB,UAAU,CAACmB,QAAQ,CAACN,IAAI,CAAC;IAC7CS,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEJ,QAAQ,CAACN,IAAI,CAAC;IAC1CS,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEF,WAAW,CAACG,IAAI,CAACC,SAAS,CAAC;IACxD,MAAMC,UAAU,GAAG,IAAIC,IAAI,EAAE;IAC7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,EAAE,GAAC,CAAC,CAAC;IAC5CP,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEG,UAAU,CAACI,WAAW,EAAE,CAAC;IAC5D,OAAO7B,QAAQ,CAAC,GAAG,CAAC;EACxB,CAAC,CAAC,OAAO8B,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACZ,QAAQ,CAACa,MAAM,KAAK,GAAG,IAAGD,KAAK,CAACZ,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAE;MAC/D,OAAOD,KAAK,CAACZ,QAAQ,CAACN,IAAI;IAC5B;IACF,IAAGkB,KAAK,CAACZ,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAE;MAC9B,IAAIb,QAAQ,GAAGY,KAAK,CAACZ,QAAQ,CAACN,IAAI;MAClCM,QAAQ,CAACc,OAAO,GAAC,wBAAwB;MACzC,OAAOd,QAAQ;IACnB;IACE,IAAIY,KAAK,CAACZ,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAE;MACjC,IAAIb,QAAQ,GAAGY,KAAK,CAACZ,QAAQ,CAACN,IAAI;MAClCM,QAAQ,CAACc,OAAO,GAAC,uBAAuB;MACxC,OAAOd,QAAQ;IACjB;EACN;AAER;AAAC,IAAAV,EAAA;AAAAyB,YAAA,CAAAzB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}