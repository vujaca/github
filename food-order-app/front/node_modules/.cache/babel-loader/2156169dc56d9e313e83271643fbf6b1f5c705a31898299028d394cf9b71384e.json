{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajko Andjic\\\\Desktop\\\\Repository\\\\github\\\\food-order-app\\\\front\\\\src\\\\pages\\\\MealDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, useRouteLoaderData } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport Meal from \"../components/Meals/MealItem/Meal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MealDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData('meal-detail');\n  console.log(data.meal + ' success');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading meal...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 19\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: data.meal,\n        children: loadedMeal => /*#__PURE__*/_jsxDEV(Meal, {\n          meal: loadedMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MealDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = MealDetailPage;\nexport default MealDetailPage;\nasync function loadMeal(id) {\n  const response = await fetch(\"http://localhost:8080/api/meals/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected meal!\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    console.log(resData);\n    return resData;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.mealId;\n  return defer({\n    meal: await loadMeal(id)\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"MealDetailPage\");","map":{"version":3,"names":["Await","defer","json","useRouteLoaderData","Suspense","Meal","jsxDEV","_jsxDEV","Fragment","_Fragment","MealDetailPage","_s","data","console","log","meal","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedMeal","_c","loadMeal","id","response","fetch","ok","message","status","resData","loader","_ref","request","params","mealId","$RefreshReg$"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/pages/MealDetail.js"],"sourcesContent":["import { Await, defer, json, useRouteLoaderData } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\nimport Meal from \"../components/Meals/MealItem/Meal\";\r\n\r\nconst MealDetailPage = () => {\r\n  const data = useRouteLoaderData('meal-detail')\r\n  console.log(data.meal + ' success');\r\n  return (\r\n    <>\r\n      <Suspense\r\n        fallback={<p style={{ textAlign: \"center\" }}>Loading meal...</p>}\r\n      >\r\n        <Await resolve={data.meal}>\r\n          {loadedMeal => <Meal meal={loadedMeal} />}\r\n        </Await>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MealDetailPage;\r\n\r\nasync function loadMeal(id) {\r\n  const response = await fetch(\"http://localhost:8080/api/meals/\" + id);\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch details for selected meal!\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    console.log(resData);\r\n    return resData\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.mealId;\r\n\r\n  return defer({\r\n    meal: await loadMeal(id),\r\n  });\r\n}\r\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AACzE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,IAAI,GAAGT,kBAAkB,CAAC,aAAa,CAAC;EAC9CU,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,GAAG,UAAU,CAAC;EACnC,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACH,QAAQ;MACPa,QAAQ,eAAEV,OAAA;QAAGW,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAH,QAAA,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;MAAAP,QAAA,eAEjET,OAAA,CAACP,KAAK;QAACwB,OAAO,EAAEZ,IAAI,CAACG,IAAK;QAAAC,QAAA,EACvBS,UAAU,iBAAIlB,OAAA,CAACF,IAAI;UAACU,IAAI,EAAEU;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC,iBACV;AAEP,CAAC;AAACZ,EAAA,CAdID,cAAc;EAAA,QACLP,kBAAkB;AAAA;AAAAuB,EAAA,GAD3BhB,cAAc;AAgBpB,eAAeA,cAAc;AAE7B,eAAeiB,QAAQA,CAACC,EAAE,EAAE;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,GAAGF,EAAE,CAAC;EACrE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM7B,IAAI,CACR;MAAE8B,OAAO,EAAE;IAA6C,CAAC,EACzD;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAAC3B,IAAI,EAAE;IACrCW,OAAO,CAACC,GAAG,CAACoB,OAAO,CAAC;IACpB,OAAOA,OAAO;EAChB;AACF;AAEA,OAAO,eAAeC,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMR,EAAE,GAAGU,MAAM,CAACC,MAAM;EAExB,OAAOtC,KAAK,CAAC;IACXc,IAAI,EAAE,MAAMY,QAAQ,CAACC,EAAE;EACzB,CAAC,CAAC;AACJ;AAAC,IAAAF,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}