{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport { redirect } from 'react-router-dom';\nimport Axios from '../apis/Axios';\nexport const login = async function (username, password) {\n  const cred = {\n    username: username.toString(),\n    password: password.toString()\n  };\n  try {\n    const response = await Axios.post('/korisnici/auth', cred);\n    const jwt_decoded = jwt_decode(response.data);\n    localStorage.setItem('jwt', response.data);\n    localStorage.setItem('role', jwt_decoded.role.authority);\n    const expiration = new Date();\n    expiration.setHours(expiration.getHours() + 1);\n    localStorage.setItem('expiration', expiration.toISOString());\n    return redirect('/');\n  } catch (error) {\n    alert('Failed login');\n    console.log(error);\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('jwt');\n  localStorage.removeItem('role');\n  localStorage.removeItem('expiration');\n  window.location.replace('/');\n};\nexport const getTokenDuration = () => {\n  const storedExpirationDate = localStorage.getItem('expiration');\n  const expirationDate = new Date(storedExpirationDate);\n  const now = new Date();\n  const duration = expirationDate.getTime = now.getTime();\n  return duration;\n};\nexport const getAuthToken = () => {\n  const token = localStorage.getItem('jwt');\n  if (!token) {\n    return null;\n  }\n  const tokenDuration = getTokenDuration();\n  if (tokenDuration < 0) {\n    return 'EXPIRED';\n  }\n  return token;\n};\nexport const tokenLoader = () => {\n  return getAuthToken();\n};","map":{"version":3,"names":["jwt_decode","redirect","Axios","login","username","password","cred","toString","response","post","jwt_decoded","data","localStorage","setItem","role","authority","expiration","Date","setHours","getHours","toISOString","error","alert","console","log","logout","removeItem","window","location","replace","getTokenDuration","storedExpirationDate","getItem","expirationDate","now","duration","getTime","getAuthToken","token","tokenDuration","tokenLoader"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/services/auth.js"],"sourcesContent":["import jwt_decode from 'jwt-decode';\r\nimport { redirect } from 'react-router-dom';\r\nimport Axios from '../apis/Axios';\r\n\r\n\r\nexport const login = async function(username, password) {\r\n    const cred = {\r\n        username: username.toString(),\r\n        password: password.toString()\r\n    }\r\n\r\n    try {\r\n        const response = await Axios.post('/korisnici/auth', cred)\r\n        const jwt_decoded = jwt_decode(response.data)\r\n        localStorage.setItem('jwt', response.data)\r\n        localStorage.setItem('role', jwt_decoded.role.authority)\r\n        const expiration = new Date()\r\n        expiration.setHours(expiration.getHours()+1)\r\n        localStorage.setItem('expiration', expiration.toISOString())\r\n        return redirect('/')\r\n    } catch (error) {\r\n        alert('Failed login')\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('jwt')\r\n    localStorage.removeItem('role')\r\n    localStorage.removeItem('expiration')\r\n    window.location.replace('/')\r\n}\r\n\r\nexport const getTokenDuration = () => {\r\n    const storedExpirationDate = localStorage.getItem('expiration')\r\n    const expirationDate = new Date(storedExpirationDate)\r\n    const now = new Date()\r\n    const duration = expirationDate.getTime = now.getTime()\r\n    return duration\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n    const token = localStorage.getItem('jwt')\r\n\r\n    if(!token) {\r\n        return null\r\n    }\r\n\r\n    const tokenDuration = getTokenDuration()\r\n\r\n    if(tokenDuration <0) {\r\n        return 'EXPIRED'\r\n    }\r\n\r\n    return token;\r\n}\r\n\r\nexport const tokenLoader = () => {\r\n    return getAuthToken()\r\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,eAAe;AAGjC,OAAO,MAAMC,KAAK,GAAG,eAAAA,CAAeC,QAAQ,EAAEC,QAAQ,EAAE;EACpD,MAAMC,IAAI,GAAG;IACTF,QAAQ,EAAEA,QAAQ,CAACG,QAAQ,EAAE;IAC7BF,QAAQ,EAAEA,QAAQ,CAACE,QAAQ;EAC/B,CAAC;EAED,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,iBAAiB,EAAEH,IAAI,CAAC;IAC1D,MAAMI,WAAW,GAAGV,UAAU,CAACQ,QAAQ,CAACG,IAAI,CAAC;IAC7CC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,QAAQ,CAACG,IAAI,CAAC;IAC1CC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,WAAW,CAACI,IAAI,CAACC,SAAS,CAAC;IACxD,MAAMC,UAAU,GAAG,IAAIC,IAAI,EAAE;IAC7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,EAAE,GAAC,CAAC,CAAC;IAC5CP,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEG,UAAU,CAACI,WAAW,EAAE,CAAC;IAC5D,OAAOnB,QAAQ,CAAC,GAAG,CAAC;EACxB,CAAC,CAAC,OAAOoB,KAAK,EAAE;IACZC,KAAK,CAAC,cAAc,CAAC;IACrBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACtB;AAEJ,CAAC;AAED,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAM;EACxBb,YAAY,CAACc,UAAU,CAAC,KAAK,CAAC;EAC9Bd,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;EAC/Bd,YAAY,CAACc,UAAU,CAAC,YAAY,CAAC;EACrCC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,GAAG,CAAC;AAChC,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAClC,MAAMC,oBAAoB,GAAGnB,YAAY,CAACoB,OAAO,CAAC,YAAY,CAAC;EAC/D,MAAMC,cAAc,GAAG,IAAIhB,IAAI,CAACc,oBAAoB,CAAC;EACrD,MAAMG,GAAG,GAAG,IAAIjB,IAAI,EAAE;EACtB,MAAMkB,QAAQ,GAAGF,cAAc,CAACG,OAAO,GAAGF,GAAG,CAACE,OAAO,EAAE;EACvD,OAAOD,QAAQ;AACnB,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAAA,KAAM;EAC9B,MAAMC,KAAK,GAAG1B,YAAY,CAACoB,OAAO,CAAC,KAAK,CAAC;EAEzC,IAAG,CAACM,KAAK,EAAE;IACP,OAAO,IAAI;EACf;EAEA,MAAMC,aAAa,GAAGT,gBAAgB,EAAE;EAExC,IAAGS,aAAa,GAAE,CAAC,EAAE;IACjB,OAAO,SAAS;EACpB;EAEA,OAAOD,KAAK;AAChB,CAAC;AAED,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAOH,YAAY,EAAE;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}