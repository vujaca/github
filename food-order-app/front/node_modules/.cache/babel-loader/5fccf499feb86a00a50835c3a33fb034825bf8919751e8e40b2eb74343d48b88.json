{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport { redirect } from 'react-router-dom';\nexport const login = async (username, password) => {\n  const cred = {\n    username: username,\n    password: password\n  };\n  try {\n    const response = await fetch('http://localhost:8080/api/korisnici/auth', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cred)\n    });\n    console.log(await response.json());\n    // const jwt_decoded = jwt_decode(await response.json())\n    // localStorage.setItem('jwt', await response.json())\n    // localStorage.setItem('role', jwt_decoded.role.authority)\n    return redirect('/');\n  } catch (error) {\n    alert('Failed login');\n    console.log(error);\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('jwt');\n  localStorage.removeItem('role');\n  return redirect('/');\n};","map":{"version":3,"names":["jwt_decode","redirect","login","username","password","cred","response","fetch","method","headers","body","JSON","stringify","console","log","json","error","alert","logout","localStorage","removeItem"],"sources":["C:/Users/Rajko Andjic/Desktop/Repository/github/food-order-app/front/src/services/auth.js"],"sourcesContent":["import jwt_decode from 'jwt-decode';\r\nimport { redirect } from 'react-router-dom';\r\n\r\nexport const login = async (username, password) => {\r\n    const cred = {\r\n        username: username,\r\n        password: password\r\n    }\r\n\r\n    try {\r\n        const response = await fetch('http://localhost:8080/api/korisnici/auth', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(cred)\r\n        })\r\n        console.log(await response.json());\r\n        // const jwt_decoded = jwt_decode(await response.json())\r\n        // localStorage.setItem('jwt', await response.json())\r\n        // localStorage.setItem('role', jwt_decoded.role.authority)\r\n        return redirect('/')\r\n    } catch (error) {\r\n        alert('Failed login')\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('jwt')\r\n    localStorage.removeItem('role')\r\n    return redirect('/')\r\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C,MAAMC,IAAI,GAAG;IACTF,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACd,CAAC;EAED,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;MACzEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IACzB,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAAC,MAAMR,QAAQ,CAACS,IAAI,EAAE,CAAC;IAClC;IACA;IACA;IACA,OAAOd,QAAQ,CAAC,GAAG,CAAC;EACxB,CAAC,CAAC,OAAOe,KAAK,EAAE;IACZC,KAAK,CAAC,cAAc,CAAC;IACrBJ,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACtB;AAEJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM;EACxBC,YAAY,CAACC,UAAU,CAAC,KAAK,CAAC;EAC9BD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EAC/B,OAAOnB,QAAQ,CAAC,GAAG,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}